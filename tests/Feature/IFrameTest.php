<?php

namespace Tests\Feature;

use Carbon\Carbon;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Mail;
use Tests\TestCase;
use App\Contributor;
use App\Organization;
use App\Program;
use App\Template;
use App\User;
use App\Meeting;
use App\Tenant;

class IFrameTest extends TestCase
{
    use RefreshDatabase;

    /** @test */
    public function user_can_view_a_published_program_listing()
    {

        $program = factory(Program::class)->states('amCamp', 'published')->create();

        $firstContributor = $program->contributors->first();

        $tenantSlug = $firstContributor->organization->tenant->slug;

        $response = $this->get("/{$tenantSlug}/iframe/{$program->id}");
        $response->assertStatus(200);

        $response->assertSee('Factory Program', $escaped = true);
        $response->assertSee('This is a program generated by a factory.', $escaped = true);
        $response->assertSee('Dem pubnotez', $escaped = true);
        $response->assertSee('Grades', $escaped = true);
        $response->assertSee('5', $escaped = true);
        $response->assertSee('7', $escaped = true);

    }


    /** @test */
    public function user_cannot_view_unpublish_program_listing()
    {
        $program = factory(Program::class)->states('amCamp', 'unpublished')->create();

        $firstContributor = $program->contributors->first();
        $tenantSlug = $firstContributor->organization->tenant->slug;

        $response = $this->get("/{$tenantSlug}/iframe/{$program->id}");

        $response->assertStatus(404);
    }
}
